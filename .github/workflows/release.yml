name: Create Release on Merge to Main

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Latest Tag
        id: get_tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"

          # Extract major, minor, patch numbers
          MAJOR=$(echo $LATEST_TAG | cut -d. -f1 | tr -d 'v')
          MINOR=$(echo $LATEST_TAG | cut -d. -f2)
          PATCH=$(echo $LATEST_TAG | cut -d. -f3)

          # Determine version bump from PR title or body
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_BODY="${{ github.event.pull_request.body }}"
          echo "PR Title: $PR_TITLE"
          echo "PR Body: $PR_BODY"

          if [[ "$PR_TITLE" == *"#major"* || "$PR_BODY" == *"#major"* ]]; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [[ "$PR_TITLE" == *"#minor"* || "$PR_BODY" == *"#minor"* ]]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          else
            PATCH=$((PATCH + 1))
          fi

          NEW_TAG="v$MAJOR.$MINOR.$PATCH"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

      - name: Create Git Tag
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git tag $NEW_TAG
          git push origin $NEW_TAG

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NEW_TAG }}
          name: Release ${{ env.NEW_TAG }}
          body: "Automated release for PR #${{ github.event.pull_request.number }} - ${{ github.event.pull_request.title }}"
          draft: false
          prerelease: false
