name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Get latest version from package.json
        id: package_version
        run: echo "CURRENT_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Determine new version
        id: versioning
        run: |
          CURRENT_VERSION="${{ env.CURRENT_VERSION }}"
          MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1)
          MINOR=$(echo $CURRENT_VERSION | cut -d. -f2)
          PATCH=$(echo $CURRENT_VERSION | cut -d. -f3)

          # Check commit messages or PR body for #major or #minor
          if git log -1 --pretty=%B | grep -q "#major"; then
            NEW_VERSION="$((MAJOR + 1)).0.0"
          elif git log -1 --pretty=%B | grep -q "#minor"; then
            NEW_VERSION="$MAJOR.$((MINOR + 1)).0"
          else
            NEW_VERSION="$MAJOR.$MINOR.$((PATCH + 1))"
          fi

          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "Version will be updated to: $NEW_VERSION"

      - name: Update package.json version
        run: |
          npm version ${{ env.NEW_VERSION }} --no-git-tag-version

      - name: Commit and push new version
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json package-lock.json
          git commit -m "chore(release): bump version to ${{ env.NEW_VERSION }}"
          git push origin main

      - name: Create GitHub Release and Tag
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ env.NEW_VERSION }}"
          name: "Release v${{ env.NEW_VERSION }}"
          body: "Automated release for version v${{ env.NEW_VERSION }}."
          draft: false
          prerelease: false
